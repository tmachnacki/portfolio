---
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";

import Card from "../card.astro";
import Skill from "../skill.astro";
import ButtonLink from "../ui/button-link.astro";
import Link from "../ui/link.astro";

import Source from "../icons/source.astro";
import Globe from "../icons/globe.astro";
import SquareTr from "../icons/square-tr.astro";
import Github from "../icons/github.astro";

export interface ProjectImage {
  label: string;
  image: ImageMetadata;
  compare?: boolean;
  compareImages?: {
    labelOne: string;
    imageOne: ImageMetadata;
    labelTwo: string;
    imageTwo: ImageMetadata;
  };
}

export interface Props {
  title: string;
  date: string;
  subtitle?: string;
  description?: string;
  features?: string[];
  thumbnail?: ImageMetadata;
  images?: ProjectImage[];
  skills?: {
    name: string;
    description?: string;
  }[];
  actions?: {
    demo?: string; // hosted url
    source?: string; // github repo url
    details?: string; // project details page
  };
}

const {
  title,
  date,
  subtitle,
  description,
  features,
  thumbnail,
  images,
  skills,
  actions,
} = Astro.props;
---

<Card class="">
  <div
    class="relative z-10 mb-2 mt-1 hidden overflow-hidden rounded-sm sm:col-span-2 sm:block"
  >
    <Image
      src={thumbnail!}
      alt={`${title} screenshot`}
      width={1600}
      height={900}
      class="h-auto w-full rounded-sm object-cover transition"
    />
  </div>

  <div class="z-10 sm:col-span-6">
    <div class="mb-3 text-base font-medium leading-tight text-foreground">
      <h3>
        {title}
      </h3>
      <!-- <p class="text-zinc-500">{subtitle}</p> -->
    </div>

    <Image
      src={thumbnail!}
      alt={`${title} screenshot`}
      width={1600}
      height={900}
      class="block h-auto w-full max-w-48 rounded-sm object-cover transition sm:hidden sm:max-w-none mb-3"
    />

    {
      description && (
        <p class="mb-3 text-sm text-muted-foreground">{description}</p>
      )
    }

    {
      features && features.length > 0 && (
        <ul class="mb-3 space-y-1.5 text-sm leading-snug text-muted-foreground">
          {features.slice(0, 6).map((feature) => (
            <li class="flex items-start gap-2">
              {/* <Check class="size-4 flex-shrink-0 text-primary/70 group-hover:text-primary transition duration-200" /> */}
              <span aria-hidden="true" class="leading-none">
                ðŸ‘‰
              </span>
              {feature}
            </li>
          ))}
        </ul>
      )
    }

    {
      skills && skills.length > 0 && (
        <ul class="mb-3 flex flex-wrap" aria-label="Technologies used">
          {skills.map((skill) => (
            <li class="mr-1.5 mt-2">
              <Skill
                label={skill.name}
                class="transition lg:group-hover:border-primary/50 lg:group-hover:text-indigo-400 lg:group-hover:shadow-md lg:group-hover:shadow-primary/10"
              />
            </li>
          ))}
        </ul>
      )
    }

    {
      actions && (
        <ul class="mb-4 flex flex-wrap *:mr-2 *:mt-2">
          {actions.source && (
            <ButtonLink
              href={actions.source}
              class={
                "h-9 rounded-full bg-gradient-to-t from-muted to-transparent text-sm hover:bg-accent"
              }
              variant={"outline"}
              target="_blank"
              rel="noreferrer noopener"
              aria-label={`${title} source code on Github (opens in a new tab)`}
            >
              <Github class="mr-2 size-4" />
              Github
            </ButtonLink>
          )}

          {actions.demo && (
            <ButtonLink
              href={actions.demo}
              class={
                "h-9 rounded-full bg-gradient-to-t from-muted to-transparent text-sm hover:bg-accent"
              }
              variant={"outline"}
              target="_blank"
              rel="noreferrer noopener"
              aria-label={`${title} (opens in a new tab)`}
            >
              <Globe class="mr-2 size-4" />
              Demo
            </ButtonLink>
          )}

          {actions.details && (
            <ButtonLink
              href={actions.details}
              class={
                "h-9 rounded-full bg-gradient-to-t from-muted to-transparent text-sm hover:bg-accent"
              }
              variant={"outline"}
              data-astro-prefetch
            >
              <SquareTr class="mr-2 size-4" />
              Details
            </ButtonLink>
          )}
        </ul>
      )
    }
  </div>
</Card>
