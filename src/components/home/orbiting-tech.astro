---
import OrbitingCircles from "@/components/home/orbiting-circles";
import React from "../icons/tech/react.astro";
import Tailwind from "../icons/tech/tailwind.astro";
import Next from "../icons/tech/next.astro";
import Typescript from "../icons/tech/typescript.astro";
import AstroIcon from "../icons/tech/astro-icon.astro";
import Firebase from "../icons/tech/firebase.astro";
import Mongo from "../icons/tech/mongo.astro";

const pathClassName = "stroke-primary/20 z-10 animate-pulse";
const circleClassName =
  "bg-gradient-to-br to-black via-zinc-950 bg-background z-20";
---

<div
  class="relative flex h-[440px] w-full flex-col items-center justify-center overflow-hidden bg-transparent"
>
  {/* Inner Circles */}
  <OrbitingCircles
    className={`circle-inner size-12 from-fuchsia-500 ${circleClassName}`}
    duration={20}
    radius={80}
    delay={7}
    angle={120}
    pathClassName={pathClassName}
    tooltipLabel="Astro"
    tooltipGradientClassName="via-fuchsia-500 shadow-md shadow-fuchsia-500/50"
    client:load
  >
    <AstroIcon class="size-6" />
  </OrbitingCircles>

  <OrbitingCircles
    className={`circle-inner size-12 from-cyan-600 ${circleClassName}`}
    duration={20}
    delay={14}
    radius={80}
    angle={240}
    pathClassName={pathClassName}
    tooltipLabel="React"
    tooltipGradientClassName="via-cyan-600 shadow-md shadow-cyan-600/50"
    client:load
  >
    <React class="size-6" />
  </OrbitingCircles>

  <OrbitingCircles
    className={`circle-inner size-12 from-sky-500 ${circleClassName}`}
    duration={20}
    delay={21}
    radius={80}
    angle={360}
    pathClassName={pathClassName}
    tooltipLabel="TailwindCSS"
    tooltipGradientClassName="via-sky-500 shadow-md shadow-sky-500/50"
    client:load
  >
    <Tailwind class="size-6" />
  </OrbitingCircles>

  {/* Outer Circles (reverse) */}
  <OrbitingCircles
    className={`circle-outer size-12 from-blue-500 ${circleClassName}`}
    radius={170}
    duration={20}
    delay={5}
    reverse
    pathClassName={pathClassName}
    tooltipLabel="Typescript"
    tooltipGradientClassName="via-blue-500 shadow-md shadow-blue-500/50"
    client:load
  >
    <Typescript class="size-6" />
  </OrbitingCircles>

  <OrbitingCircles
    className={`circle-outer size-12 from-zinc-400 ${circleClassName}`}
    radius={170}
    duration={20}
    delay={10}
    reverse
    pathClassName={pathClassName}
    tooltipLabel="NextJS"
    tooltipGradientClassName="via-white shadow-md shadow-white/50"
    client:load
  >
    <Next class="size-6" />
  </OrbitingCircles>

  <OrbitingCircles
    className={`circle-outer size-12 from-yellow-500 ${circleClassName}`}
    radius={170}
    duration={20}
    delay={15}
    reverse
    pathClassName={pathClassName}
    tooltipLabel="Firebase"
    tooltipGradientClassName="via-yellow-500 shadow-md shadow-yellow-500/50"
    client:load
  >
    <Firebase class="size-6" />
  </OrbitingCircles>

  <OrbitingCircles
    className={`circle-outer size-12 from-green-500 ${circleClassName}`}
    radius={170}
    duration={20}
    delay={20}
    reverse
    pathClassName={pathClassName}
    tooltipLabel="MongoDB"
    tooltipGradientClassName="via-green-500 shadow-md shadow-green-500/50"
    client:load
  >
    <Mongo class="size-7 fill-green-600 stroke-green-900" />
  </OrbitingCircles>
</div>

<script is:inline>
  // pause orbit animations on hover
  const innerCircles = document.querySelectorAll(".circle-inner");
  innerCircles.forEach((circle) => {
    circle.addEventListener("mouseenter", () => {
      innerCircles.forEach((circle) => {
        circle.classList.add("paused");
      });
    });
    circle.addEventListener("mouseleave", () => {
      innerCircles.forEach((circle) => {
        circle.classList.remove("paused");
      });
    });
  });

  const outerCircles = document.querySelectorAll(".circle-outer");
  outerCircles.forEach((circle) => {
    circle.addEventListener("mouseenter", () => {
      outerCircles.forEach((circle) => {
        circle.classList.add("paused");
      });
    });
    circle.addEventListener("mouseleave", () => {
      outerCircles.forEach((circle) => {
        circle.classList.remove("paused");
      });
    });
  });
</script>
