---
// root
import Layout from "@/layouts/Layout.astro";
import "@/styles/globals.css";

// data
import { EXPERIENCE } from "@/data/experience";
import { PROJECTS } from "@/data/projects";

// client components
import Spotlight from "@/components/home/spotlight";
// import About from "@/components/home/about";
import About from "@/components/home/about.astro";

// astro components
// import Avatar from "@/components/home/avatar.astro";
import OrbitingTech from "@/components/home/orbiting-tech.astro";
import TechList from "@/components/home/tech-list.astro";
import SectionHeader from "@/components/home/section-header.astro";
import Experience from "@/components/home/experience.astro";
import SocialLinks from "@/components/home/social-links.astro";
import Button from "@/components/ui/button.astro";
import { buttonVariants } from "@/components/ui/button.astro";
import Project from "@/components/home/project.astro";
import PageTitle from "@/components/page-title.astro";

// icons
import Pin from "@/components/icons/pin.astro";
import ArrowR from "@/components/icons/arrow-r.astro";
import { cn } from "@/lib/utils";
---

<Layout>
  <!-- background effects-->
  <div
    class="absolute inset-0 flex h-[500px] w-full items-center justify-center overflow-hidden lg:fixed"
  >
    <Spotlight fill="var(--indigo-300)" client:idle />
  </div>

  <div
    class={cn("page-container relative min-h-svh lg:grid lg:grid-cols-10 lg:gap-24", "pt-12 lg:pt-0")}
  >
    <!-- hero -->
    <header
      class="relative w-full lg:sticky lg:top-0 lg:col-span-4 lg:flex lg:max-h-svh lg:flex-col lg:justify-between lg:py-24"
    >
      <div class="relative flex flex-col items-start gap-12 text-left">
        <div class="flex flex-row gap-6">
          <!-- <Avatar /> -->
          <div class="flex-grow-1 flex-shrink-0">
            <PageTitle class="mb-2">
              <a href="/"> Tim Machnacki </a>
            </PageTitle>
            <h2
              class="mb-2 text-lg font-extralight tracking-wider text-foreground lg:text-xl"
            >
              Frontend Software Engineer
            </h2>
            <span
              class="flex items-center gap-2 text-base text-muted-foreground"
            >
              <Pin class={"size-4"} />
              Lake Orion, MI
            </span>
          </div>
        </div>
        <SocialLinks class="flex lg:hidden" />
        <About />
      </div>

      <nav
        class="mt-24 hidden flex-shrink-0 flex-grow text-zinc-500 lg:block"
        aria-label="In page jump links"
      >
        <ul class="w-max">
          <li class="relative">
            <a
              id="skills-nav"
              href="#skills"
              class="active group flex items-center gap-4 py-2 text-sm font-medium uppercase tracking-wider transition-all duration-100 hover:text-foreground motion-reduce:transition-none [&.active]:text-foreground"
            >
              <span
                aria-hidden="true"
                class="h-px w-10 bg-zinc-500 transition-all duration-100 group-hover:w-16 group-hover:bg-foreground group-[&.active]:w-16 group-[&.active]:bg-foreground motion-reduce:transition-none"
              ></span>
              <span>Skills</span>
            </a>
          </li>
          <li class="relative">
            <a
              id="experience-nav"
              href="#experience"
              class="group flex items-center gap-4 py-2 text-sm font-medium uppercase tracking-wider transition-all duration-100 hover:text-foreground motion-reduce:transition-none [&.active]:text-foreground"
            >
              <span
                aria-hidden="true"
                class="h-px w-10 bg-zinc-500 transition-all duration-100 group-hover:w-16 group-hover:bg-foreground group-[&.active]:w-16 group-[&.active]:bg-foreground motion-reduce:transition-none"
              ></span>
              <span>Experience</span>
            </a>
          </li>
          <li class="relative">
            <a
              id="projects-nav"
              href="#projects"
              class="group flex items-center gap-4 py-2 text-sm font-medium uppercase tracking-wider transition-all duration-100 hover:text-foreground motion-reduce:transition-none [&.active]:text-foreground"
            >
              <span
                aria-hidden="true"
                class="h-px w-10 bg-zinc-500 transition-all duration-100 group-hover:w-16 group-hover:bg-foreground group-[&.active]:w-16 group-[&.active]:bg-foreground motion-reduce:transition-none"
              ></span>
              <span>Projects</span>
            </a>
          </li>
        </ul>
      </nav>

      <SocialLinks class="hidden lg:flex" />
    </header>

    <!-- content -->
    <main class="relative w-full pt-24 lg:col-span-6 lg:py-24">
      <!-- about -->
      <section
        id="skills"
        class="mb-16 scroll-mt-16 md:mb-24 lg:mb-36 lg:scroll-mt-24 lg:px-4"
        aria-label="About Me"
        data-observable="true"
      >
        <SectionHeader title="Skills" />

        <OrbitingTech />
        <TechList />
      </section>

      <!-- experience -->
      <section
        id="experience"
        class="mb-16 scroll-mt-16 md:mb-24 lg:mb-36 lg:scroll-mt-24"
        aria-label="Work experience"
        data-observable="true"
      >
        <SectionHeader title="Experience" />

        <!-- tabs -->
        <div
          role="tablist"
          class="mb-8 grid h-10 w-full grid-cols-2 gap-1 rounded-md bg-muted p-1 text-muted-foreground backdrop-blur"
        >
          <button
            id="work-tab"
            role="tab"
            aria-selected="true"
            aria-controls="work-panel"
            tabindex="0"
            class="inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 aria-selected:bg-background aria-selected:text-foreground aria-selected:shadow-sm motion-reduce:transition-none"
          >
            Work
          </button>
          <button
            id="education-tab"
            role="tab"
            aria-selected="false"
            aria-controls="education-panel"
            tabindex="-1"
            class="inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 aria-selected:bg-background aria-selected:text-foreground aria-selected:shadow-sm motion-reduce:transition-none"
          >
            Education
          </button>
        </div>

        <!-- experience cards -->
        <ol
          id="work-panel"
          role="tabpanel"
          aria-labelledby="work-tab"
          tabindex="0"
          class="group/list space-y-16 lg:space-y-8"
        >
          {
            EXPERIENCE.map((experience) => (
              <li id={experience.company}>
                <Experience {...experience} />
              </li>
            ))
          }
        </ol>

        <!-- education -->
        <div
          id="education-panel"
          role="tabpanel"
          aria-labelledby="education-tab"
          tabindex="0"
          class="hidden"
          hidden
        >
          <Experience
            timePeriod="2018 - 2022"
            title="B.S., Computer Science"
            company="University of Michigan"
            companyUrl="https://umich.edu"
            bullets={["Men's Club Lacrosse"]}
          />
        </div>
      </section>

      <!-- Projects -->
      <section
        id="projects"
        class="mb-16 scroll-mt-16 md:mb-24 lg:mb-36 lg:scroll-mt-24"
        aria-label="Projects"
        data-observable="true"
      >
        <SectionHeader title="Projects" />
        <!-- project cards -->
        <ol class="group/list space-y-16 lg:space-y-8">
          {
            PROJECTS.slice(0, 3).map((project) => (
              <li id={project.title}>
                <Project {...project} />
              </li>
            ))
          }
        </ol>

        <div class="mt-12 flex w-full items-center justify-center">
          <!-- prefteched links must be rendered directly as <a> tags -->
          <a
            class={cn(
              buttonVariants({
                variant: "outline",
                size: "default",
                gradient: "primary",
                class: "group w-full max-w-40 rounded-full",
              }),
            )}
            href="/projects"
            data-astro-prefetch
          >
            <span
              class="absolute -top-px left-[20%] h-px w-[60%] bg-gradient-to-r from-primary/10 via-primary to-primary/10 opacity-0 transition-opacity duration-300 group-hover/button:opacity-100 motion-reduce:transition-none"
            ></span>
            View More
            <ArrowR
              class="ml-2 size-4 transition-all duration-100 group-hover:translate-x-1 motion-reduce:transition-none"
            />
            <span
              class="absolute -bottom-px left-[20%] h-px w-[60%] bg-gradient-to-r from-primary/10 via-primary to-primary/10 transition-opacity duration-300 group-hover/button:opacity-0 motion-reduce:transition-none"
            ></span>
          </a>
        </div>
      </section>
    </main>
  </div>
</Layout>

<!-- scrollspy -->
<script>
  const threshold = 0.75;

  const changeNav = (entries: any[], observer: any) => {
    entries.forEach(
      (entry: {
        isIntersecting: any;
        intersectionRatio: number;
        target: { getAttribute: (arg0: string) => any };
      }) => {
        if (entry.isIntersecting && entry.intersectionRatio >= threshold) {
          document.querySelector(".active")?.classList.remove("active");
          const id = entry.target.getAttribute("id");
          const newLink = document
            ?.querySelector(`[href="#${id}"]`)
            ?.classList.add("active");
        }
      },
    );
  };

  const options = {
    threshold: threshold,
  };

  const observer = new IntersectionObserver(changeNav, options);

  const sections = document.querySelectorAll("[data-observable='true']");
  sections.forEach((section) => {
    observer.observe(section);
  });
</script>

<!-- accessible tabs: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role -->
<script is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    // Only handle one particular tablist; if you have multiple tab
    // lists (might even be nested), you have to apply this code for each one
    const tabList = document.querySelector('[role="tablist"]');
    const tabs = tabList.querySelectorAll(':scope > [role="tab"]');

    // Add a click event handler to each tab
    tabs?.forEach((tab) => {
      tab.addEventListener("click", changeTabs);
    });

    // Enable arrow navigation between tabs in the tab list
    let tabFocus = 0;

    tabList?.addEventListener("keydown", (e) => {
      // Move right
      if (e.key === "ArrowRight" || e.key === "ArrowLeft") {
        tabs[tabFocus].setAttribute("tabindex", -1);
        if (e.key === "ArrowRight") {
          tabFocus++;
          // If we're at the end, go to the start
          if (tabFocus >= tabs.length) {
            tabFocus = 0;
          }
          // Move left
        } else if (e.key === "ArrowLeft") {
          tabFocus--;
          // If we're at the start, move to the end
          if (tabFocus < 0) {
            tabFocus = tabs.length - 1;
          }
        }

        tabs[tabFocus].setAttribute("tabindex", 0);
        tabs[tabFocus].focus();
      }
    });
  });

  function changeTabs(e) {
    const targetTab = e.target;
    const tabList = targetTab.parentNode;
    const tabGroup = tabList.parentNode;

    // Remove all current selected tabs
    tabList
      .querySelectorAll(':scope > [aria-selected="true"]')
      .forEach((t) => t.setAttribute("aria-selected", false));

    // Set this tab as selected
    targetTab.setAttribute("aria-selected", true);

    // Hide all tab panels
    tabGroup.querySelectorAll(':scope > [role="tabpanel"]').forEach((p) => {
      p.setAttribute("hidden", true);
      p.classList.add("hidden");
    });

    // Show the selected panel
    const currentPanel = tabGroup.querySelector(
      `#${targetTab.getAttribute("aria-controls")}`,
    );
    currentPanel.removeAttribute("hidden");
    currentPanel.classList.remove("hidden");
  }
</script>
